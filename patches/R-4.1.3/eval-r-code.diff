Index: R-4.1.3/src/main/main.c
===================================================================
--- R-4.1.3.orig/src/main/main.c
+++ R-4.1.3/src/main/main.c
@@ -1139,6 +1139,59 @@ void mainloop(void)
     run_Rmainloop();
 }
 
+#ifdef __EMSCRIPTEN__
+#include <emscripten.h>
+#include <emscripten/fetch.h>
+
+/* TODO: This patch should be moved to an external emscripten SIDE_MODULE
+ * This will help to keep webR features separate from required patches to R core
+ */
+struct eval_args {
+    const char *str;
+    SEXP env;
+};
+
+SEXP eval_tryCatch_body(void *data) {
+    struct eval_args *args = (struct eval_args*) data;
+    return R_ParseEvalString(args->str, args->env);
+}
+
+SEXP eval_tryCatch_handler(SEXP cond, void *hdata) {
+    *((SEXP *)hdata) = cond;
+    return R_NilValue;
+}
+
+void eval_tryCatch_finally(void *fdata) {}
+
+SEXP EMSCRIPTEN_KEEPALIVE evalRCode(const char *str, SEXP env) {
+    if (!env) env = R_GlobalEnv;
+
+    SEXP ret = PROTECT(allocVector(VECSXP, 3));
+    SEXP hdata = R_NilValue;
+    SEXP fdata = R_NilValue;
+
+    struct eval_args data = { str, env };
+    SEXP conds = PROTECT(allocVector(STRSXP, 1));
+    SET_STRING_ELT(conds, 0, mkChar("error"));
+
+    SEXP result = PROTECT(R_tryCatch(
+        &eval_tryCatch_body,
+        &data,
+        conds,
+        &eval_tryCatch_handler,
+        &hdata,
+        &eval_tryCatch_finally,
+        &fdata
+    ));
+
+    SET_VECTOR_ELT(ret, 0, result);
+    SET_VECTOR_ELT(ret, 1, hdata);
+    SET_VECTOR_ELT(ret, 2, fdata);
+    UNPROTECT(3);
+    return ret;
+}
+#endif
+
 /*this functionality now appears in 3
   places-jump_to_toplevel/profile/here */
 
